<%-include("../partials/adminPartials/sidebar")%>
<style>
   .product-text-container{
  /* background-color: aqua; */
  border-radius: 12px;
  width: 100%;
  height: 56px;
  margin-top: 73px;
  box-shadow: 0px 0px 7px -3px;
  }
</style>
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

  
  <!-- Modal -->
  <div class="modal fade" id="staticBackdrop" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="staticBackdropLabel">Select Date Range</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body">
            <form id="salesReport" method="post" action="/admin/download-sales-report">
                <label for="startDate">Start Date:</label>
                <input type="date" name="startDate" id="startDate" required onchange="return handleDateChange()">
                <label for="endDate">End Date:</label>
                <input type="date" name="endDate" id="endDate" required onchange="return handleDateChange()">
                <div style="color: red;" id="dateAlert"></div>
           
            <div class="row mt-5">
                <div class="col-sm-6"> 
                    <div class="form-check">
                        <input class="form-check-input" type="radio" name="downloadFormat" value="pdf" id="pdfCheckbox" checked>
                        <label class="form-check-label" for="pdfCheckbox">
                            PDF
                        </label>
                    </div>
                </div>
                <div class="col-sm-6"> 
                    <div class="form-check">
                        <input class="form-check-input" type="radio" name="downloadFormat" value="excel" id="excelCheckbox">
                        <label class="form-check-label" for="excelCheckbox">
                            Excel
                        </label>
                    </div>
                </div>
            </div>
            
            

        </div>
        
        <div class="modal-footer">
            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            <button type="submit" class="btn btn-dark" id="generateReportBtn">Generate Report</button>
        </div>
        
    </form>

      </div>
    </div>
  </div>

            
            <div class="details ">
                <div class="recentOrders">
                  <div class="product-text-container container-fluid mb-4" style="display: flex; justify-content: space-between;">
                    <h4 style=" margin-top: 11px;" id="ManageProduct-text">DASHBOARD</h4>
                </div>                   
                        <button type="button"  data-bs-toggle="modal" data-bs-target="#staticBackdrop" class="btn btn-dark mt-3 ms-5">Download Sales Report</button>

                </div>

                    <div class="container mt-4">
                        <div class="row">
                          <div class="col-lg-12">
                              <div class="card mb-4 shadow" style="background-color: #fff;">
                                <h2 class="card-header">Sales Analysis</h2>
                                <div class="card-body">
                                  <div class="row">
                                      <div class="dropdown">
                                          <button class="btn btn-secondary dropdown-toggle" type="button" id="timeIntervalDropdown" data-bs-toggle="dropdown" aria-expanded="false">
                                            By Day
                                          </button>
                                          <ul class="dropdown-menu" aria-labelledby="timeIntervalDropdown">
                                            <li><a class="dropdown-item" id="byDayOption">By Day</a></li>
                                            <li><a class="dropdown-item" id="byMonthOption">By Month</a></li>
                                            <li><a class="dropdown-item" id="byYearOption">By Year</a></li>
                                          </ul>
                                        </div>
                                    <div class="col-lg-12">
                                      <canvas id="salesGraphAmount"></canvas>
                                    </div>
                                    <div class="col-lg-12">
                                        <canvas id="salesGraphCount"></canvas>
                                       
                                      </div>
                                      <div class="col-lg-12">
                                        <canvas id="categoryChart"></canvas>
                                    </div>
                                    
                                  </div>
                                </div>
                              </div>
                            </div>
                            
                      
                      
                          <div class="col-lg-12">
                              <div class="card shadow" style="background-color: #fff;">
                                  <h2 class="card-header">Best Sellers</h2>
                                  <div class="card-body">
                                      <div class="table-responsive">
                                          <table class="table table-borderless">
                                              <thead>
                                                  <tr>
                                                      <th>Product Image</th>
                                                      <th>Product</th>
                                                      <th>Product Name</th>
                                                      <th>Price</th>
                                                      <th>size</th>
                                                      <th>Status</th>
                                                      <th>Sold</th>
                                                  </tr>
                                              </thead>
                                              <tbody id="bestSellersTable">
                                              </tbody>
                                          </table>
                                      </div>
                                  </div>
                              </div>
                          </div>
                        </div>
                      </div>

                </div> 
                
            </div>

            <style>
           
             
              
                .container {
                  display: flex;
                  flex-wrap: wrap;
                  justify-content: space-between;
                  padding: 20px;
                }
              
                .card {
                  background-color: #fff;
                  padding: 20px;
                  border-radius: 8px;
                  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
                  margin-bottom: 20px;
                  flex: 1;
                }
              
                .graph {
                  margin-right: 0;
                }
              
                .table-responsive {
                  overflow-x: auto;
                }
              </style>
              
            


        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        function handleDateChange() {
            const startDateInput = document.getElementById('startDate');
            const endDateInput = document.getElementById('endDate');
            const alertArea = document.getElementById('dateAlert');
            const submitButton = document.getElementById('generateReportBtn')
            const currentDate = new Date();     
            currentDate.setHours(0, 0, 0, 0);
    
            const parsedStartDate = new Date(startDateInput.value);
            const parsedEndDate = new Date(endDateInput.value);
            console.log(currentDate,parsedEndDate,parsedStartDate,'======================');
            if (parsedStartDate.getTime() > currentDate.getTime() || parsedEndDate.getTime() > currentDate.getTime()) {
        submitButton.disabled = true;
        alertArea.innerHTML = '<div class="alert alert-danger mt-2" role="alert">Please select a date less than or equal to the current date.</div>';
    }else if(parsedStartDate.getTime() > parsedEndDate.getTime()){
        submitButton.disabled = true;

        alertArea.innerHTML = '<div class="alert alert-danger mt-2" role="alert">Please select a Start date less than or equal to the End date.</div>';

    } else {
        submitButton.disabled = false;
        alertArea.innerHTML = '';
    }
        }
    </script>
    
              
<script>

    updateSalesGraph("day");
document.getElementById("byDayOption").addEventListener("click", function() {
    document.getElementById("timeIntervalDropdown").textContent = "By Day";
    updateSalesGraph("day");
});


document.getElementById("byMonthOption").addEventListener("click", function() {
    document.getElementById("timeIntervalDropdown").textContent = "By Month";
    updateSalesGraph("month");
});

document.getElementById("byYearOption").addEventListener("click", function() {
    document.getElementById("timeIntervalDropdown").textContent = "By Year";
    updateSalesGraph("year");
});


async function fetchSalesData(timeInterval) {
    try {
        let response;
        if (timeInterval === "day") {
             response = await fetch('/admin/count-orders-by-day');
        } else if (timeInterval === "month") {
          
            response = await fetch(`/admin/count-orders-by-${timeInterval}`);
        } else if (timeInterval === "year") {
          
            response = await fetch(`/admin/count-orders-by-${timeInterval}`);
        } else {
            return false;
        }
        
        if (!response.ok) {
            throw new Error('Network response was not ok');
        }
      
        const data = await response.json();
       
       
        return data;
    } catch (error) {
        console.error("Error fetching data:", error);
    }
}



async function fetchOrdersAndSales() {
    try {

      const response = await fetch("/admin/latestOrders");
      if (!response.ok) {
          throw new Error("Network response was not ok");
        }
        const data = await response.json();
       console.log(data,"dat");
      return data;
    } catch (error) {
      console.log("Error fetching data", error);
    }
  }




async function updateSalesGraph(timeInterval) {
    const salesData = await fetchSalesData(timeInterval);
    const Amount = document.getElementById("salesGraphAmount").getContext("2d");
    const Count = document.getElementById("salesGraphCount").getContext("2d");

    if (window.myChart1) {
        window.myChart1.destroy();
    }
    if (window.myChart2) {
        window.myChart2.destroy();
    }           
    const last5DaysCount = salesData.labelsByCount.slice(-5);
    const last5DaysCountData = salesData.dataByCount.slice(-5);
    window.myChart1 = new Chart(Amount, {
        type: "line",
        data: {
            labels: last5DaysCount,
            datasets: [{ 
                label: "Sales by orders",
                data: last5DaysCountData,
                borderColor: "red",
                fill: false
            }]
        },
        options: {
            legend: { display: false },
        }
    });
    
    const barColors = ["green"];
    const last5DaysLabels = salesData.labelsByAmount.slice(-5);
    const last5DaysData = salesData.dataByAmount.slice(-5);
    console.log('lasr 5 days data',last5DaysData,'===');
    window.myChart2 = new Chart(Count, {
        type: "bar",
        data: {
            labels: last5DaysLabels,
            datasets: [
                {
                    label: "Sales by Amount",
                    data: last5DaysData,
                    backgroundColor: barColors,
                    borderColor: "white",
                    borderWidth: 3,
                },
            ],
        },
        options: {
            scales: {
                x: [{
                    grid: {
                        display: true
                    },
                    maxBarThickness: 5,
                }],
                y: [{
                    beginAtZero: true,
                    maxTicksLimit: 6
                }]
            }
        },
    });

    const categoryChartCanvas = document.getElementById('categoryChart');

const categoryColors = ['#f7464a', '#4d5360', '#fdb45c', '#46bfbd', '#949fb1'];

const categoryChart = new Chart(categoryChartCanvas.getContext('2d'), {
    type: 'doughnut',
    data: {
        labels: salesData.labelsByCategory,
        datasets: [{
            data: salesData.dataByCategory,
            backgroundColor: categoryColors,
        }],
    },
    options: {
        legend: {
            position: 'right',
        },
        responsive: true,
        maintainAspectRatio: false,
        aspectRatio: 1, 
    },
});

categoryChartCanvas.style.height = '80vh'; 






}



async function updateLatestOrdersAndBestSellers() {
    const data = await fetchOrdersAndSales();
    console.log(data,"DDDDDDDDDDDDDDDDDDDDDDDDDD");
    const latestOrdersTable = document.getElementById("latestOrdersTable");
    const bestSellersTable = document.getElementById("bestSellersTable");
    const ordersData = data.latestOrders;
    const bestSellersData = data.bestseller;
    console.log("Orders Data:", ordersData);
console.log("Best Sellers Data:", bestSellersData);
console.log("Latest Orders Table:", latestOrdersTable);
console.log("Best Sellers Table:", bestSellersTable);

   

    bestSellersData.forEach((seller) => {
        const row = bestSellersTable.insertRow();
        const productImageCell = row.insertCell(0);
        const productCell = row.insertCell(1);
        const productNameCell = row.insertCell(2);
        const priceCell = row.insertCell(3);
        const sizeCell = row.insertCell(4);
        const statusCell = row.insertCell(5);
        const salesCell = row.insertCell(6);

        const imgElement = document.createElement("img");
        const imageUrl = "/productImages/" + seller.productDetails.images[0];
        imgElement.src = imageUrl;
        imgElement.style.maxWidth = "50px";
        productImageCell.appendChild(imgElement);
        console.log(seller.productDetails._id);
        console.log(seller.productDetails.name);
        console.log(seller.productDetails.DiscountAmount);
        console.log(seller.productDetails.AvailableQuantity);
        console.log(seller.totalCount);
        productCell.textContent = seller.productDetails._id; 
        productNameCell.textContent = seller.productDetails.name; 
        priceCell.textContent = seller.productDetails.discountAmount?seller.productDetails.discountAmount:seller.productDetails.price;
        sizeCell.textContent = seller.size
        const isAvailable = seller.productDetails.variant.some(variant => variant.size === seller.size && variant.quantity > 0);
        statusCell.textContent = isAvailable ? "In Stock" : "Out of Stock";
        statusCell.style.color = isAvailable ? "green" : "red";
        statusCell.style.fontWeight = "bold";
        salesCell.textContent = seller.totalCount;
    });
}



updateSalesGraph();
updateLatestOrdersAndBestSellers();



</script>


<%-include("../partials/adminPartials/footer")%>
